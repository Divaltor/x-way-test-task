version: '3'
services:
  app:
    build: .
    restart: on-failure
    environment:
      DEBUG: '${DEBUG}'
    depends_on:
      - postgresql
    command: python manage.py runserver 0.0.0.0:8000 --noreload
    ports:
      - 8000:8000
    volumes:
      - .:/code
    networks:
      - service

  postgresql:
    image: postgres:13-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_DB: '${DB_NAME}'
    ports:
      - 5432:5432
    volumes:
      - pgsql:/var/lib/postgresql/data
    networks:
      - service

  rabbitmq:
    image: rabbitmq:latest
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASS}'
    ports:
      - 5672:5672
    networks:
      - service

  celery:
    build: .
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - postgresql
    command: celery -A app.celery.app worker --loglevel=INFO
    networks:
      - service

  beat:
    build: .
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - postgresql
    command: celery -A app.celery:app beat --loglevel=INFO
    networks:
      - service

networks:
  service:
    driver: bridge

volumes:
  pgsql:
    driver: local
  redis_data:
    driver: local